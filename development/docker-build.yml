version: 0.2
env:
  variables:
    #VERSION: "1.0"
    IMAGE_REPO_NAME: "resttest"
    AWS_ACCOUNT_ID: "877859816718"
    AWS_DEFAULT_REGION: "eu-central-1"
    
  parameter-store:
    TAG_VERSION: "image_tag_v"
    TAG_PATCH:   "image_tag_p"
    

phases:
#  install:
#    commands:
#      - /usr/local/bin/dotnet-install.sh --channel STS

  pre_build:
    commands:
      - echo "Starting buidling docker image"
      - echo "Login in ecr"
      - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 877859816718.dkr.ecr.eu-central-1.amazonaws.com
  
  build:
    commands:
      - TAG_PATCH=$TAG_VERSION.$((TAG_PATCH+1))
      - cd src/
      - ls -la
      - docker build -t $IMAGE_REPO_NAME:$TAG_PATCH -f Web/Dockerfile .
      - printf '[{"name":"$IMAGE_REPO_NAME","imageUri":"%s"}]'  $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG_PATCH  > imageDetail.json
      - cat imageDetail.json

  post_build: 
    commands:
      - echo "Docker build complited"          
      - echo Docker tag
      - docker tag $IMAGE_REPO_NAME:$TAG_PATCH $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG_PATCH
      - docker images
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG_PATCH
      #store new image tag number in ssm 
      - aws ssm put-parameter --name image_tag_p --type String --value ${TAG_PATCH} --overwrite      

artifacts:
    files: 
      - imageDetail.json
    discard-paths: yes