{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "RestTest API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_LoginUser",
        "requestBody": {
          "x-name": "userLoginRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Auth/sign-in": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_SignInUser",
        "requestBody": {
          "x-name": "userSignUpRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUpRequst"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/File": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_Upload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Image": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ResourceItems": {
      "get": {
        "tags": [
          "ResourceItems"
        ],
        "operationId": "ResourceItems_GetResourceItemsWithPagination",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfResourceItemDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "ResourceItems"
        ],
        "operationId": "ResourceItems_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Synonym": {
      "get": {
        "tags": [
          "Synonym"
        ],
        "operationId": "Synonym_GetTargetSynonyms",
        "parameters": [
          {
            "name": "fromWord",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetSynonymView"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Synonym"
        ],
        "operationId": "Synonym_AddSynonym",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewSynonymRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserLoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserSignUpRequst": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedListOfResourceItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceItemDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ResourceItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "CreateResourceItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "location"
        ],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "location": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "TargetSynonymView": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fromSynonym": {
            "type": "string"
          },
          "synonyms": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddNewSynonymRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "synonymFrom": {
            "type": "string"
          },
          "synonymTo": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}